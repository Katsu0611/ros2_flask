/* style.css */
/* ROS2 Robot Controller のメインスタイルシート */

/* リセット */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* 基本レイアウト */
body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    min-height: 100vh;
    padding: 20px;
    line-height: 1.6;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    background: rgba(255, 255, 255, 0.95);
    border-radius: 20px;
    padding: 30px;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(10px);
}

/* ヘッダー */
.header {
    text-align: center;
    margin-bottom: 30px;
}

.header h1 {
    color: #333;
    font-size: 2.5rem;
    margin-bottom: 10px;
    font-weight: 700;
}

.header p {
    color: #666;
    font-size: 1.1rem;
}

/* 状態パネル */
.status-panel {
    background: #f8f9fa;
    border-radius: 15px;
    padding: 20px;
    margin-bottom: 30px;
    border-left: 5px solid #28a745;
    transition: all 0.3s ease;
}

.status-panel:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
}

.status-panel h2 {
    color: #333;
    margin-bottom: 20px;
    font-size: 1.5rem;
}

.status-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
}

.status-item {
    background: white;
    padding: 15px;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
}

.status-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.15);
}

.status-item h3 {
    color: #495057;
    font-size: 0.9rem;
    text-transform: uppercase;
    margin-bottom: 8px;
    letter-spacing: 0.5px;
    font-weight: 600;
}

.status-value {
    color: #333;
    font-size: 1.2rem;
    font-weight: 600;
}

/* 制御セクション */
.control-section {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 30px;
    margin-bottom: 30px;
}

.control-panel {
    background: white;
    border-radius: 15px;
    padding: 25px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
}

.control-panel:hover {
    transform: translateY(-3px);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);
}

.control-panel h2 {
    color: #333;
    margin-bottom: 20px;
    text-align: center;
    font-size: 1.4rem;
}

/* 移動制御ボタン */
.movement-controls {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 10px;
    margin-bottom: 20px;
}

.move-btn {
    padding: 15px;
    border: none;
    border-radius: 10px;
    background: #007bff;
    color: white;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    font-weight: 500;
    position: relative;
    overflow: hidden;
}

.move-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
}

.move-btn:hover::before {
    left: 100%;
}

.move-btn:hover {
    background: #0056b3;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 123, 255, 0.3);
}

.move-btn:active {
    transform: translateY(0);
}

.move-btn.stop {
    background: #dc3545;
    grid-column: 2;
}

.move-btn.stop:hover {
    background: #c82333;
    box-shadow: 0 5px 15px rgba(220, 53, 69, 0.3);
}

/* 速度制御 */
.speed-control {
    margin-bottom: 20px;
}

.speed-control label {
    display: block;
    color: #495057;
    margin-bottom: 8px;
    font-weight: 500;
}

.speed-control input {
    width: 100%;
    padding: 10px;
    border: 2px solid #e9ecef;
    border-radius: 8px;
    font-size: 1rem;
    transition: all 0.3s ease;
}

.speed-control input:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
    transform: scale(1.02);
}

/* カスタムコマンド */
.custom-command {
    display: flex;
    gap: 10px;
    margin-top: 15px;
}

.custom-command input {
    flex: 1;
    padding: 12px;
    border: 2px solid #e9ecef;
    border-radius: 8px;
    font-size: 1rem;
    transition: all 0.3s ease;
}

.custom-command input:focus {
    outline: none;
    border-color: #28a745;
    box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);
}

.custom-command button {
    padding: 12px 20px;
    background: #28a745;
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-weight: 500;
    transition: all 0.3s ease;
}

.custom-command button:hover {
    background: #218838;
    transform: translateY(-1px);
    box-shadow: 0 3px 10px rgba(40, 167, 69, 0.3);
}

/* アラート */
.alert {
    padding: 15px;
    border-radius: 10px;
    margin-bottom: 20px;
    font-weight: 500;
    animation: slideIn 0.3s ease;
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(-20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.alert-success {
    background: #d4edda;
    color: #155724;
    border-left: 4px solid #28a745;
}

.alert-error {
    background: #f8d7da;
    color: #721c24;
    border-left: 4px solid #dc3545;
}

/* 接続状態 */
.connection-status {
    display: inline-block;
    padding: 5px 15px;
    border-radius: 20px;
    font-size: 0.9rem;
    font-weight: 500;
    margin-left: 10px;
    transition: all 0.3s ease;
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0% { opacity: 1; }
    50% { opacity: 0.7; }
    100% { opacity: 1; }
}

.connected {
    background: #d4edda;
    color: #155724;
    border: 2px solid #28a745;
}

.disconnected {
    background: #f8d7da;
    color: #721c24;
    border: 2px solid #dc3545;
}

/* プリセットボタン */
.preset-buttons {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    margin-top: 10px;
}

.preset-btn {
    font-size: 0.9rem;
    padding: 8px 12px;
    background: #6c757d;
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.preset-btn:hover {
    background: #5a6268;
    transform: translateY(-1px);
}

/* レスポンシブデザイン */
@media (max-width: 768px) {
    .control-section {
        grid-template-columns: 1fr;
        gap: 20px;
    }
    
    .container {
        padding: 20px;
        margin: 10px;
    }
    
    .header h1 {
        font-size: 2rem;
    }
    
    .status-grid {
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 15px;
    }
    
    .movement-controls {
        gap: 8px;
    }
    
    .move-btn {
        padding: 12px;
        font-size: 0.9rem;
    }
    
    .custom-command {
        flex-direction: column;
    }
    
    .preset-buttons {
        justify-content: center;
    }
}

@media (max-width: 480px) {
    body {
        padding: 10px;
    }
    
    .container {
        padding: 15px;
    }
    
    .header h1 {
        font-size: 1.8rem;
    }
    
    .status-grid {
        grid-template-columns: 1fr;
    }
    
    .movement-controls {
        grid-template-columns: 1fr;
        gap: 10px;
    }
    
    .move-btn.stop {
        grid-column: 1;
    }
}

/* ダークモード対応 */
@media (prefers-color-scheme: dark) {
    body {
        background: linear-gradient(135deg, #2d3748 0%, #4a5568 100%);
    }
    
    .container {
        background: rgba(45, 55, 72, 0.95);
        color: #e2e8f0;
    }
    
    .header h1 {
        color: #e2e8f0;
    }
    
    .status-panel {
        background: #4a5568;
        border-left-color: #48bb78;
    }
    
    .status-item {
        background: #2d3748;
        color: #e2e8f0;
    }
    
    .control-panel {
        background: #2d3748;
        color: #e2e8f0;
    }
    
    .control-panel h2 {
        color: #e2e8f0;
    }
}

/* アニメーション */
.fade-in {
    animation: fadeIn 0.5s ease;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* ローディング状態 */
.loading {
    position: relative;
    overflow: hidden;
}

.loading::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
    animation: loading 1.5s infinite;
}

@keyframes loading {
    0% { left: -100%; }
    100% { left: 100%; }
}